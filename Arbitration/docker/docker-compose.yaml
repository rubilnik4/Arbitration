name: arbitration

services:
  app:
    build: ../src/Arbitration
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Database=Host=postgres;Database=myapp;Username=postgres;Password=postgres
      - OpenTelemetry__Endpoint=http://otel-collector:4317
      - DOTNET_USE_POLLING_FILE_WATCHER=1
      - DOTNET_RUNNING_IN_CONTAINER=true
      - DOTNET_HOSTBUILDER__RELOADCONFIGONCHANGE=false
    depends_on:
      - postgres
      - otel-collector
    ports:
      - "8080:80"
      - "5005:5005"
    volumes:
      - ../src/Arbitration:/app
    
  postgres:
    image: postgres:15.5
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  loki:
    image: grafana/loki:3.4
    ports:
      - "3100:3100"
    command: ["--config.file=/etc/loki/local-config.yaml"]
    volumes:
      - loki_data:/loki
      - ../config/loki-config.yaml:/etc/loki/local-config.yaml

  tempo:
    image: grafana/tempo:2.3.0
    command: ["--config.file=/etc/tempo.yaml"]
    volumes:
      - ../config/tempo.yaml:/etc/tempo.yaml
    ports:
      - "3200:3200"

  prometheus:
    image: prom/prometheus:v2.47.2
    command: ["--config.file=/etc/prometheus/prometheus.yaml"]
    volumes:
      - ../config/prometheus.yaml:/etc/prometheus/prometheus.yaml
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:10.1.5
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ../config/datasources.yaml:/etc/grafana/provisioning/grafana/datasources.yaml

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.99.0
    volumes:
      - ../config/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    command: ["--config=/etc/otel-collector-config.yaml"]
    ports:
      - "4317:4317"
      - "4318:4318"

volumes:
  postgres_data:
  loki_data:
  grafana_data:
  prometheus-data: