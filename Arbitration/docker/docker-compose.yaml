version: '3.8'

services:
  app:
    build: ./src
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Database=Host=postgres;Database=myapp;Username=postgres;Password=postgres
      - OpenTelemetry__Endpoint=http://otel-collector:4317
    depends_on:
      - postgres
      - otel-collector
    ports:
      - "8080:80"

  postgres:
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/loki
      - ./.config/loki-config.yaml:/etc/loki/local-config.yaml

  tempo:
    image: grafana/tempo:latest
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./monitoring/tempo.yaml:/etc/tempo.yaml
    ports:
      - "3200:3200"
      - "4317:4317"
      - "9411:9411"

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - otel-collector

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./.config/grafana/provisioning:/etc/grafana/provisioning 
    depends_on:
      - loki
      - tempo
      - prometheus

  otel-collector:
    image: otel/opentelemetry-collector:latest
    volumes:
      - ./docker/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    command: ["--config=/etc/otel-collector-config.yaml"]
    ports:
      - "4317:4317"
      - "55679:55679"

volumes:
  postgres_data:
  loki_data:
  grafana_data: